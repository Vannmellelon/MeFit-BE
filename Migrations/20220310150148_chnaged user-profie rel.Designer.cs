// <auto-generated />
using System;
using MeFit_BE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeFit_BE.Migrations
{
    [DbContext(typeof(MeFitDbContext))]
    [Migration("20220310150148_chnaged user-profie rel")]
    partial class chnageduserprofierel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("PostalPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Disabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("MedicalConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContributer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = false,
                            IsContributer = false,
                            Username = "Miriam"
                        });
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContributedById")
                        .HasColumnType("int");

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMuscleGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContributedById");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Achieved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndData")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("WorkoutProgramId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExcersiseId")
                        .HasColumnType("int");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseRepetitions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.SubGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Achieved")
                        .HasColumnType("bit");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoalId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("SubGoal");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<int?>("ContributedById")
                        .HasColumnType("int");

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("SetId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContributedById");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SetId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.WorkoutProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContributedById")
                        .HasColumnType("int");

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContributedById");

                    b.HasIndex("ProfileId");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.Profile", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.User.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("MeFit_BE.Models.Domain.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Exercise", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.User.User", "ContributedBy")
                        .WithMany("Exercises")
                        .HasForeignKey("ContributedById");

                    b.Navigation("ContributedBy");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Goal", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.User.Profile", null)
                        .WithMany("Goals")
                        .HasForeignKey("ProfileId");

                    b.HasOne("MeFit_BE.Models.Domain.Workout.WorkoutProgram", "WorkoutProgram")
                        .WithMany()
                        .HasForeignKey("WorkoutProgramId");

                    b.Navigation("WorkoutProgram");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Set", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.Workout.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.SubGoal", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.Workout.Goal", null)
                        .WithMany("SubGoals")
                        .HasForeignKey("GoalId");

                    b.HasOne("MeFit_BE.Models.Domain.Workout.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Workout", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.User.User", "ContributedBy")
                        .WithMany("Workouts")
                        .HasForeignKey("ContributedById");

                    b.HasOne("MeFit_BE.Models.Domain.User.Profile", null)
                        .WithMany("Workouts")
                        .HasForeignKey("ProfileId");

                    b.HasOne("MeFit_BE.Models.Domain.Workout.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId");

                    b.Navigation("ContributedBy");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.WorkoutProgram", b =>
                {
                    b.HasOne("MeFit_BE.Models.Domain.User.User", "ContributedBy")
                        .WithMany("Programs")
                        .HasForeignKey("ContributedById");

                    b.HasOne("MeFit_BE.Models.Domain.User.Profile", null)
                        .WithMany("WorkoutPrograms")
                        .HasForeignKey("ProfileId");

                    b.Navigation("ContributedBy");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.Profile", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("WorkoutPrograms");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.User.User", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Programs");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("MeFit_BE.Models.Domain.Workout.Goal", b =>
                {
                    b.Navigation("SubGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
